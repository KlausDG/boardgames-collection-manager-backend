generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Boardgame {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name                String              @unique
  thumbnail           String
  description         String?
  yearPublished       Int?
  language            String?
  minPlayers          Int?                @default(1)
  maxPlayers          Int?
  bestPlayerCount     Int[]
  minPlaytime         Int?
  maxPlaytime         Int?
  weight              Float?
  languageDependence  LanguageDependences
  bggRank             Int?
  bggLink             String?
  bggId               Int                 @unique
  inCollection        Boolean             @default(true)
  category            BoardgameCategories @default(STANDALONE)
  purchasedPrice      Float?
  acquisitionDate     DateTime?           @default(now())
  isExpansion         Boolean             @default(false)
  isExpansionFor      Boardgame?          @relation("ExpansionFor", fields: [isExpansionForBggId], references: [bggId])
  isExpansionForBggId Int?

  designers   Designer[]
  mechanics   Mechanics[]
  publisher   Publisher   @relation(fields: [publisherId], references: [id])
  publisherId Int

  sleeveRequirements BoardgameSleeveRequirement[] @relation("BoardgameRequirement")

  expansions Boardgame[] @relation("ExpansionFor")

  @@map("boardgames")
}

model Designer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  boardgames Boardgame[]

  @@map("designers")
}

model Publisher {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  boardgames Boardgame[]

  @@map("publishers")
}

model Mechanics {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique

  boardgames Boardgame[]

  @@map("mechanics")
}

model SleeveSize {
  id       Int             @id @default(autoincrement())
  name     String          @unique
  width    Float
  height   Float
  products SleeveProduct[]

  sleeveRequirements BoardgameSleeveRequirement[] @relation("SleeveSizeRequirement")
}

model SleeveStock {
  id        Int           @id @default(autoincrement())
  productId Int
  product   SleeveProduct @relation(fields: [productId], references: [id])
  amount    Int
}

model SleeveProduct {
  id             Int              @id @default(autoincrement())
  brandId        Int
  brand          SleeveBrand      @relation(fields: [brandId], references: [id])
  sizeId         Int
  size           SleeveSize       @relation(fields: [sizeId], references: [id])
  category       SleeveCategories
  sleevesPerPack Int
  stocks         SleeveStock[]
}

model SleeveBrand {
  id       Int             @id @default(autoincrement())
  name     String          @unique
  products SleeveProduct[]
}

model BoardgameSleeveRequirement {
  id           Int        @id @default(autoincrement())
  amount       Int
  boardgameId  Int
  sleeveSizeId Int
  boardgame    Boardgame  @relation("BoardgameRequirement", fields: [boardgameId], references: [id])
  sleeveSize   SleeveSize @relation("SleeveSizeRequirement", fields: [sleeveSizeId], references: [id])
}

enum BoardgameCategories {
  STANDALONE
  EXPANSION
  ADDON
  EXTRA
  ACCESSORY
}

enum LanguageDependences {
  NO
  LOW
  MODERATE
  HIGH
}

enum SleeveCategories {
  SLIM
  REGULAR
  PREMIUM
  ULTRA_PREMIUM
}
