generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String

  firstName String?
  lastName  String?

  boardgames Boardgame[]
  Sleeve     Sleeve[]

  @@map("users")
}

model Boardgame {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name            String              @unique
  thumbnail       String
  description     String?
  yearPublished   String?
  language        String?
  minPlayers      Int?                @default(1)
  maxPlayers      Int?
  bestPlayerCount Int?
  minPlaytime     Int?
  maxPlaytime     Int?
  weight          Float?
  bggRank         Int?
  bggLink         String?
  inCollection    Boolean             @default(true)
  category        BoardgameCategories @default(BASE)
  purchasedValue  Float?

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  designers Designer[]
  sleeves   BoardgameSleeve[]

  @@map("boardgames")
}

model Designer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  boardgames Boardgame[]

  @@map("designers")
}

model SleeveBrand {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  sleeveTypes Sleeve[]

  @@map("sleeve_brands")
}

model SleeveType {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     String
  width    Float
  Height   Float
  isCustom Boolean @default(false)

  sleeveBrands Sleeve[]

  @@map("sleeve_types")
}

model Sleeve {
  id        Int      @unique() @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category        SleeveCategories @default(REGULAR)
  availableAmount Int              @default(0)
  totalAmount     Int              @default(0)

  boardgames BoardgameSleeve[]

  sleeveType    SleeveType  @relation(fields: [sleeveTypeId], references: [id])
  sleeveTypeId  Int
  SleeveBrand   SleeveBrand @relation(fields: [sleeveBrandId], references: [id])
  sleeveBrandId Int

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([sleeveTypeId, sleeveBrandId, id])
  @@map("sleeves")
}

model BoardgameSleeve {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  amount Int

  boardgame   Boardgame @relation(fields: [boardgameId], references: [id])
  boardgameId Int
  sleeve      Sleeve    @relation(fields: [sleeveId], references: [id])
  sleeveId    Int

  @@id([boardgameId, sleeveId])
  @@map("boardgame_sleeves")
}

enum BoardgameCategories {
  BASE
  EXPANSION
  ADDON
  EXTRA
  ACCESSORY
}

enum SleeveCategories {
  SLIM
  REGULAR
  PREMIUM
  ULTRA_PREMIUM
}
