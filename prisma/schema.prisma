generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Boardgame {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name                String              @unique
  thumbnail           String
  description         String?
  yearPublished       Int?
  language            String?
  minPlayers          Int?                @default(1)
  maxPlayers          Int?
  bestPlayerCount     Int[]
  minPlaytime         Int?
  maxPlaytime         Int?
  weight              Float?
  bggRank             Int?
  bggLink             String?
  bggId               Int                 @unique
  inCollection        Boolean             @default(true)
  category            BoardgameCategories @default(BASE)
  purchasedValue      Float?
  isExpansion         Boolean             @default(false)
  isExpansionFor      Boardgame?          @relation("ExpansionFor", fields: [isExpansionForBggId], references: [bggId])
  isExpansionForBggId Int?

  designers   Designer[]
  publisher   Publisher  @relation(fields: [publisherId], references: [id])
  publisherId Int

  sleeveRequirements BoardgameSleeveRequirement[] @relation("BoardgameRequirement")

  expansions Boardgame[] @relation("ExpansionFor")

  @@map("boardgames")
}

model Designer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  boardgames Boardgame[]

  @@map("designers")
}

model Publisher {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  boardgames Boardgame[]

  @@map("publishers")
}

model SleeveType {
  id           Int                          @id @default(autoincrement())
  type         String                       @unique
  width        Float
  height       Float
  stocks       SleeveStock[]                @relation("SleeveTypeStock")
  requirements BoardgameSleeveRequirement[] @relation("SleeveTypeRequirement")
}

model SleeveStock {
  id             Int              @id @default(autoincrement())
  brandId        Int
  brand          SleeveBrand      @relation(fields: [brandId], references: [id])
  category       SleeveCategories
  amount         Int
  packs          Int
  sleevesPerPack Int
  sleeveTypeId   Int
  sleeveType     SleeveType       @relation("SleeveTypeStock", fields: [sleeveTypeId], references: [id])
}

model SleeveBrand {
  id     Int           @id @default(autoincrement())
  name   String
  stocks SleeveStock[]
}

model BoardgameSleeveRequirement {
  id           Int        @id @default(autoincrement())
  amount       Int
  boardgameId  Int
  sleeveTypeId Int
  boardgame    Boardgame  @relation("BoardgameRequirement", fields: [boardgameId], references: [id])
  sleeveType   SleeveType @relation("SleeveTypeRequirement", fields: [sleeveTypeId], references: [id])
}

enum BoardgameCategories {
  BASE
  EXPANSION
  ADDON
  EXTRA
  ACCESSORY
}

enum SleeveCategories {
  SLIM
  REGULAR
  PREMIUM
  ULTRA_PREMIUM
}
